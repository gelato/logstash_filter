filter {
  
  
  ######## SENSU #######
  if [fields][type] == 'sensuserver' {
    json {
      source => message
    }
    if [event][check][status] in [1,2] {
      mutate {
        rename => {
          "[event][client][name]" => "sensu_client_name"
          "[event][check][name]" => "sensu_check_name"
          "[event][check][status]" => "sensu_check_status"
          "[event][check][output]" => "sensu_check_output"
          "[event][occurrences]" => "sensu_check_occurrences"
          "[event][check][duration]" => "sensu_check_duration"
        }
      }
      date {
        match => ["timestamp","ISO8601"]
        remove_field => ["message","event","timestamp"]
      }
    } else {
      drop {}
    }
  }
  
  
  ###### BIOPORTAL #######
  if [fields][type] == 'bioportal' {
    json {
      source => message
    }
    date {
      match => ["field_timestamp","YYYY-MM-dd HH:mm:ss"]
    }
  }
  
  
  ###### GEO_IP ######
  if [fields][geoip_src_field] {
    mutate {
      rename => {"%{[fields][geoip_src_field]}" => "source_ip"}
    }
    geoip {
      source => "source_ip"
      target => "geoip_src"
    }
  }
  if [fields][geoip_dest_field] {
    mutate {
      rename => {"%{[fields][geoip__dest_field]}" => "dest_ip"}
    }
    geoip {
      source => "dest_ip"
      target => "geoip_dest"
    }
  }

  
  ###### PFSENSE ######
  if [fields][type] == 'syslog-pfsense' {
    grok {
      match => [ "message", "%{SYSLOGTIMESTAMP:syslog_timestamp}: %{WORD:syslog_severity} %{SYSLOGHOST:syslog_hostname} %{SYSLOGPROG:syslog_program}:%{SPACE}%{GREEDYDATA:syslog_message}" ]
    }
    date {
      match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
    }
    mutate {
      replace => [ "host", "%{syslog_hostname}" ]
    }
  
    if [program] == "filterlog" {
      grok {
        patterns_dir => "./patterns"
        match => [ "syslog_message", "%{LOG_DATA}%{IP_SPECIFIC_DATA}%{IP_DATA}%{PROTOCOL_DATA}" ]
      }
      mutate {
        lowercase => [ 'proto' ]
      }
      geoip {
        add_tag => [ "GeoIP" ]
        source => "src_ip"
      }
    }
  }

# some filter stuff
# test extra
}
